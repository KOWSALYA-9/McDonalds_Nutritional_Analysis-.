import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load the dataset
file_path = "path_to_your_file.csv"  # Update this with your file path
data = pd.read_csv(file_path)

# Example Dataset Structure:
# Ensure your dataset contains columns for 'Category', 'Calories', 'Proteins', 'Fats', 'Sugar', 'Carbohydrates', and 'Cholesterol'.

# Pie Chart - Calories Distribution by Category
calories_by_category = data.groupby('Category')['Calories'].sum()
plt.figure(figsize=(8, 6))
calories_by_category.plot.pie(autopct='%1.2f%%', startangle=140)
plt.title("Calories Distribution by Category")
plt.ylabel("")  # Remove y-axis label
plt.show()

# Bar Plot - Median Protein by Category
median_proteins = data.groupby('Category')['Proteins'].median()
plt.figure(figsize=(10, 6))
median_proteins.sort_values().plot(kind='barh', color='skyblue')
plt.title("Median Protein per Category")
plt.xlabel("Median Protein")
plt.ylabel("Category")
plt.show()

# Bubble Chart - Fats by Category
category_fats = data.groupby('Category')['Fats'].sum()
bubble_size = category_fats / category_fats.max() * 1000
plt.figure(figsize=(8, 6))
plt.scatter(category_fats.index, category_fats.values, s=bubble_size, alpha=0.6, color='orange')
plt.title("Fats by Category (Bubble Size Represents Total Fats)")
plt.ylabel("Total Fats")
plt.xlabel("Category")
plt.xticks(rotation=45)
plt.show()

# Bar Plot - Sugar per Category
median_sugar = data.groupby('Category')['Sugar'].median()
plt.figure(figsize=(10, 6))
median_sugar.sort_values().plot(kind='bar', color='green')
plt.title("Median Sugar per Category")
plt.xlabel("Category")
plt.ylabel("Median Sugar")
plt.xticks(rotation=45)
plt.show()

# Pie Chart - Carbohydrates by Category
carbohydrates_by_category = data.groupby('Category')['Carbohydrates'].sum()
plt.figure(figsize=(8, 6))
carbohydrates_by_category.plot.pie(autopct='%1.2f%%', startangle=140)
plt.title("Carbohydrates Distribution by Category")
plt.ylabel("")  # Remove y-axis label
plt.show()

# Bar Plot - Cholesterol per Category with Cumulative Percentage
cholesterol_sum = data.groupby('Category')['Cholesterol'].sum()
cholesterol_sorted = cholesterol_sum.sort_values(ascending=False)
cumulative_percentage = cholesterol_sorted.cumsum() / cholesterol_sorted.sum() * 100
plt.figure(figsize=(12, 6))
sns.barplot(x=cholesterol_sorted.index, y=cholesterol_sorted.values, color='blue')
plt.plot(cholesterol_sorted.index, cumulative_percentage, marker='o', color='red')
plt.title("Cholesterol per Category with Cumulative Percentage")
plt.xlabel("Category")
plt.ylabel("Cholesterol / Cumulative %")
plt.xticks(rotation=45)
plt.show()